- name: Create public ip for {{ vm_name }}
  azure_rm_publicipaddress:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    allocation_method: Static
    name: "pub-ip-{{ vm_name }}"

- name: Create NIC for {{ vm_name }}
  azure_rm_networkinterface:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    name: "nic-{{ vm_name }}"
    virtual_network: "{{ vm_virtual_network }}"
    subnet: "{{ vm_subnet }}"
    ip_configurations:
    - name: "primary"
      public_ip_name: "pub-ip-{{ vm_name }}"
      private_ip_address: "{{ vm_ip_address }}"
      private_ip_allocation_method: "Static"
      primary: "yes"
    security_group: "{{ vm_security_group }}"

- name: Create VM {{ vm_name }}
  azure_rm_virtualmachine:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    resource_group: "{{ res_group }}"
    name: "{{ vm_name }}"
    vm_size: "{{ vm_size }}"
    managed_disk_type: "{{ storage_class }}"
    storage_account: "lrs{{ lab_id }}"
    storage_container: "vms{{lab_id}}"
    storage_blob: "blob-{{vm_name}}.vhd"
    admin_username: "{{ username }}"
    admin_password: "{{ password }}"
    network_interfaces: "nic-{{ vm_name }}"
    image: "{{ vm_image }}"
    os_type: "{{ os_type }}"
    ssh_public_keys: "{{ vm_ssh_public_keys | default(omit) }}"
  register: create_vm_output

- set_fact:
    vm_public_ip: "{{ create_vm_output.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}"

- name: Add host to dynamic inventory
  add_host:
    name: "{{ vm_name }}"
    ansible_host: "{{ vm_public_ip }}"
    ansible_user: "{{ username }}"
    #ansible_ssh_private_key_file: "insecure"
    ansible_ssh_pass: "{{ password }}"
    ansible_sudo_pass: "{{ password }}"

# When the os_type from the topology is "windows"
# - Configure winrm using Powershell extensions
- name: Create Windows VM Extension
  when: os_type == "Windows"
  azure_rm_virtualmachine_extension:
    client_id: "{{ azure_client_id }}"
    tenant: "{{ azure_tenant }}"
    subscription_id: "{{ azure_subscription_id }}"
    secret: "{{ azure_secret }}"
    name: "vmext-{{ vm_name }}"
    resource_group: "{{ res_group }}"
    virtual_machine_name: "{{ vm_name }}"
    publisher: Microsoft.Compute
    virtual_machine_extension_type: CustomScriptExtension
    type_handler_version: 1.9
    settings:
      CommandToExecute: "powershell -ExecutionPolicy Unrestricted -file provision.ps1" 
      FileUris: [ "https://raw.githubusercontent.com/sperreault/ansible-azure-lab/master/provision.ps1" ]
  ignore_errors: true
  register: create_windows_vm_extension

# When the os_type from the topology is "linux"
# - Configure the user to be part of sudoers 
# - Add labs directory to user home directory
- name: "Prepare Linux Host"
  when: os_type == "Linux"
  become: yes
  block:
    - name: "Waiting for the Linux VM to be ready"
      wait_for:
        port: 22
        timeout: 3000

    - name: "Create labs directory in the {{ username }}'s home'"
      file:
        path: "/home/{{ username }}/labs"
        state: "directory"
        owner: "{{ username }}"
        mode: 0755
        group: "{{ username }}"

    - name: "Add the user {{ username }} to the sudoer file."
      template:
        dest: "/etc/sudoers.d/waagent" 
        src: "waagent.j2" 
        mode: 0600
        owner: root
        group: root
  delegate_to: "{{ vm_name }}"
